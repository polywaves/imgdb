services:
  nginx:
    build:
      context: ./nginx
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
      mode: replicated
      replicas: 10

  api:
    build:
      context: .
    command: uvicorn main:app --port 8080 --host=0.0.0.0 --use-colors
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
      mode: replicated
      replicas: 10
    # labels:
    #   autoheal-app: true
    # healthcheck:
    #   test: curl --fail http://api:8080/health || exit 1
    #   interval: 3s
    #   timeout: 3s
    #   retries: 3
    #   start_period: 5s

  mongo:
    image: mongo
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/etc/mongo
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
  
  i2v-neural:
    image: cr.weaviate.io/semitechnologies/img2vec-pytorch:resnet50
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
      mode: replicated
      replicas: 10
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: ["compute"]

  # autoheal:
  #   restart: always
  #   image: willfarrell/autoheal
  #   environment:
  #     - AUTOHEAL_CONTAINER_LABEL=autoheal-app
  #     - AUTOHEAL_DEFAULT_STOP_TIMEOUT=1
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  weaviate-node-1:
    init: true
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.27.0
    volumes:
      - weaviate_node_1:/var/lib/weaviate
    env_file:
      - .env
    environment:
      - CLUSTER_HOSTNAME=node1
      - CLUSTER_GOSSIP_BIND_PORT=7100
      - CLUSTER_DATA_BIND_PORT=7101
      - RAFT_JOIN=node1,node2,node3
      - RAFT_BOOTSTRAP_EXPECT=3
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10

  weaviate-node-2:
    init: true
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.27.0
    volumes:
      - weaviate_node_2:/var/lib/weaviate
    env_file:
      - .env
    environment:
      - CLUSTER_HOSTNAME=node2
      - CLUSTER_GOSSIP_BIND_PORT=7102
      - CLUSTER_DATA_BIND_PORT=7103
      - CLUSTER_JOIN=weaviate-node-1:7100
      - RAFT_JOIN=node1,node2,node3
      - RAFT_BOOTSTRAP_EXPECT=3
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10

  weaviate-node-3:
    init: true
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.27.0
    volumes:
      - weaviate_node_3:/var/lib/weaviate
    env_file:
      - .env
    environment:
      - CLUSTER_HOSTNAME=node3
      - CLUSTER_GOSSIP_BIND_PORT=7104
      - CLUSTER_DATA_BIND_PORT=7105
      - CLUSTER_JOIN=weaviate-node-1:7100
      - RAFT_JOIN=node1,node2,node3
      - RAFT_BOOTSTRAP_EXPECT=3
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10

volumes:
  weaviate_node_1:
  weaviate_node_2:
  weaviate_node_3:
  mongo_data: